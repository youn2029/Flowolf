package kr.or.dev.timeline.schedule.web;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import kr.or.dev.common.Format;
import kr.or.dev.timeline.schedule.model.ScheduleVO;
import kr.or.dev.timeline.schedule.service.ScheduleServiceInf;
import kr.or.dev.user.member.model.MemberVO;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@RequestMapping("/schd")
public class ScheduleController {

	// Service injection
	@Resource(name = "scheduleService")
	private ScheduleServiceInf schService;

	@RequestMapping("/test2")
	public String test(Model model, @RequestParam("datetime1") String nDate1,
			@RequestParam("datetime2") String nDate2,
			@RequestParam("schdName") String name,
			@RequestParam("memo") String memo,
			@RequestParam("location") String location,
			@RequestParam("timer") String timer,
			@RequestParam("lat") String lat, @RequestParam("lon") String lon)
			throws ParseException {

		// 기존의 yyyy/MM/dd HH:mm 형식을 yyyy-MM-dd HH:mm으로 변경해야함
		SimpleDateFormat beforeFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm");

		// 기존의 형식을 parsing
		Date insertDate = beforeFormat.parse(nDate1);

		// 반환된 String 값을 Date로 변환
		model.addAttribute("nDate1", insertDate);
		model.addAttribute("nDate2", nDate2);
		model.addAttribute("name", name);
		model.addAttribute("memo", memo);
		model.addAttribute("location", location);
		model.addAttribute("timer", timer);
		model.addAttribute("lat", lat);
		model.addAttribute("lon", lon);
		return "test2";
	}

	@RequestMapping(value = "/lastTest", method = RequestMethod.GET)
	public String sendSchedule(Model model,
			@RequestParam("lat") String lat, 
			@RequestParam("lon") String lon,
			@RequestParam("datetime") String datetime,
			ScheduleVO vo,
			HttpSession session)
			throws NumberFormatException, ParseException {

		// 날짜 datetime
		String[] time = datetime.split(" - ");
		// 시작시간
		String start = time[0];
		// 종료시간
		String end = time[1];
		model.addAttribute("start", start);
		model.addAttribute("end", end);
		model.addAttribute("vo",vo);
		String location = vo.getSchd_loc();
		// 알람 울릴시간(Format class의 메서드를 이용, 알림날짜를 추출)
		String notificationTimer = Format.notificationFormatter(start,
				-Integer.parseInt(vo.getSchd_alarm()));
		model.addAttribute("timer", notificationTimer);
		// 구글맵에 데이터보내기
		String latLng = "https://maps.google.com?q=" + location;
		model.addAttribute("callback", latLng);
		// 미니맵 띄울 데이터
		String miniMap = "https://maps.googleapis.com/maps/api/staticmap?center="
				+ lat
				+ ","
				+ lon
				+ "&amp;zoom=15&amp;size=530x300&amp;markers=color:red|"
				+ lat
				+ ","
				+ lon
				+ "&amp;key=AIzaSyADjbtMn46r9DGFyo_ZRz3c6fOXzuOKWCw";
		model.addAttribute("miniMap", miniMap);

		// 스케줄 작성한 회원정보
//		MemberVO memVo = (MemberVO) session.getAttribute("memVo");
//		String mem_id = memVo.getMem_id();

		// 현재 프로젝트 번호

		return "last";

	}

}
