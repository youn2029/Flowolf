package kr.or.dev.files.service;

import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import kr.or.dev.files.dao.FilesDaoInf;
import kr.or.dev.files.model.FilesVO;

import org.apache.commons.dbcp2.BasicDataSource;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.core.io.ClassPathResource;
import org.springframework.jdbc.datasource.init.DatabasePopulatorUtils;
import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations={"classpath:kr/or/dev/config/spring/root-context.xml",
								 "classpath:kr/or/dev/config/spring/datasource_test.xml",
								 "classpath:kr/or/dev/config/spring/transaction.xml"})
public class FilesServiceTest {

	@Resource(name="filesService")
	private FilesServiceInf filesService;
	
	@Before
	public void setUp(){
		// populator : 스프링에서 제공
		// datasource(db 연결정보), 초기화 스크립트
		
		// datasource
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@112.220.114.130:1521:xe");
		dataSource.setUsername("flowolftest");
		dataSource.setPassword("flowolftest");
		
		// 초기화 스크립트(init.sql)
		
		// poplucator 생성
		ResourceDatabasePopulator populator = new ResourceDatabasePopulator();
		populator.addScript(new ClassPathResource("kr/or/dev/config/db/init.sql"));
		
		DatabasePopulatorUtils.execute(populator, dataSource);
	}

	/**
	* Method : filesServiceTest
	* 최초작성일 : 2018. 9. 26.
	* 작성자 : 윤성호
	* 변경이력 :
	* Method 설명 : filesServiceTest
	*/
	@Test
	public void filesServiceTest() {
		assertNotNull(filesService);
	}
	
	/**
	* Method : insertFilesTest
	* 최초작성일 : 2018. 9. 26.
	* 작성자 : 윤성호
	* 변경이력 :
	* Method 설명 : 첨부파일 등록 Test
	*/
	@Test
	public void insertFilesTest(){
		/***Given***/
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("files_name", "insert files test");
		paramMap.put("files_path", "insert files test");
		paramMap.put("files_upload", "insert files test");
		paramMap.put("timeline_col", "task_no");
		paramMap.put("timeline_no", 10001);

		/***When***/
		int resultCnt = filesService.insertFiles(paramMap);

		/***Then***/
		assertEquals(1, resultCnt);
	}
	
	/**
	* Method : deleteFilesRTest
	* 최초작성일 : 2018. 9. 26.
	* 작성자 : 윤성호
	* 변경이력 :
	* Method 설명 : 첨부파일 삭제 Test
	*/
	@Test
	public void deleteFilesRTest(){
		/***Given***/
		
		/***When***/
		int resultCnt = filesService.deleteFilesR(10001);
		
		/***Then***/
		assertEquals(1, resultCnt);
	}
	
	/**
	* Method : getFilesDetailTest
	* 최초작성일 : 2018. 9. 26.
	* 작성자 : 윤성호
	* 변경이력 :
	* Method 설명 : 첨부파일 상세 조회 Test
	*/
	@Test
	public void getFilesDetailTest(){
		/***Given***/		

		/***When***/
		FilesVO filesVo = filesService.getFilesDetail(10001);

		/***Then***/
		assertEquals("init files name", filesVo.getFiles_name());
	}
	
	/**
	* Method : getFilesListTest
	* 최초작성일 : 2018. 9. 26.
	* 작성자 : 윤성호
	* 변경이력 :
	* Method 설명 : 해당 글의 첨부파일 조회
	*/
	@Test
	public void getFilesListTest(){
		/***Given***/
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("timeline_col", "basic_no");
		paramMap.put("timeline_no", 10001);

		/***When***/
		List<FilesVO> filesList = filesService.getFilesList(paramMap);

		/***Then***/
		assertEquals(1, filesList.size());
	}
	
	@Test
	public void getFilesSearchListTest(){
		/***Given***/
		Map<String, String> searchMap = new HashMap<String, String>();
		searchMap.put("searchField", "files_name");
		searchMap.put("searchData", "fil");

		/***When***/
		List<FilesVO> filesSearchList = filesService.getFilesSearchList(searchMap);

		/***Then***/
		assertEquals(1, filesSearchList.size());
	}

}
